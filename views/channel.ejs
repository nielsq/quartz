<!DOCTYPE html>
<html lang="de">
<head>

  <%- include('./head'); %>
  <script src="https://unpkg.com/socket.io-client@3.0.1/dist/socket.io.min.js"></script>
  <link rel="stylesheet" href="/resources/channel.css">
</head>
<body>

<header>
  <%- include('./header'); %>
</header>


<% if (chn.chan_log_on_only == 1 && !user) { %>
    <p>Bitte Loggen Sie sich ein um den Stream zu sehen</p>
<% } else {%>
  

<div id="livestreamPlayer">
  <link href="/resources/video-js.css" rel="stylesheet">
  <script src="/resources/video.min.js"></script>

  <video-js id=vid1  class="vjs-default-skin" controls poster='/content/<%=name%>/thumbnail.png' >
    <source
        src="/content/<%=name%>/index.m3u8",
    type="application/x-mpegURL"> 
  </video-js>

  <script>
    var socket = io("/viewer");
    socket.emit('join', "<%=name%>");

    var player = videojs('vid1');
    player.fluid(true);
    if(!<%=live%>){
      player.bigPlayButton.hide();
      player.errorDisplay.dispose();

    }

    player.on('dblclick', function() {
      this.requestFullscreen(); 

      player.on('dblclick', function() {
        this.exitFullscreen(); 
      });

    });

    player.on('pause', function() {
      this.bigPlayButton.show();

      player.one('play', function() {
        this.bigPlayButton.hide();
      });

    });
    //autoplay?
    //player.play();

  </script>

</div>

<div class="information" id="StreamInfos">
  <h2><%= chn.chan_title %></h2>
  <p> <b><%= name %>: </b >DESCIPTION <%= chn.chan_descrip %></p>

    <% if (!live) { %>
      <p>Offline</p>
    <% } else {%>
        <script async type="module">
    
          await sleep(1000)
          loadViewer()
            function httpGetAsync(theUrl, callback) {
        
              var xmlHttp = new XMLHttpRequest();
              xmlHttp.onreadystatechange = function() { 
                if (xmlHttp.readyState == 4 && xmlHttp.status == 200)
                    callback(xmlHttp.responseText);
              }
        
              xmlHttp.open("GET", theUrl, true); // true for asynchronous 
              xmlHttp.send(null);
            }
        
            function sleep(milliseconds) {
              return new Promise(resolve => setTimeout(resolve, milliseconds));
            }
        
            async function loadViewer(){
              
              const url='https://vssubuntu/viewer/<%=name%>'
        
              httpGetAsync(url, (data)=>{
                console.log(data)
                document.getElementById("viewer").innerHTML = data;
              })
        
              await sleep(15000)
        
              loadViewer()
            }
        </script>
    
        <p id="viewer"></p>
       
    
    <% } %>

    <% if(same){ %>

      <a href="/settings" > Einstellungen</a>
  
    <% } %>
</div>

<div class="chat">

  <% if (chn.chan_chat == 1 ) { %>
    <p>chat deaktiviert</p>
    <% } else if ((chn.chan_chat == 3 || chn.chan_chat == 2) && same)  {%>
      <div class="chatcontainer">
        <p>Chat:</p>
        <ul id="chatlist" class="chat">
    
        </ul>
        <div id="sendbottom">
          <input class="inputMessage" type="text" id="msg"/>
          <input type="button" id="send" value="send" class="inlineButton">
          <p id="sendStatus"></p>
        </div>
      </div>
  <% } else if (chn.chan_chat == 2 )  {%>
    <div id="sendbottom">
      <input class="inputMessage" type="text" id="msg"/>
      <input type="button" id="send" value="send" class="inlineButton">
      <p id="sendStatus"></p>
    </div>
  <% } else if (chn.chan_chat == 3 && !user)  {%>
    <p>chat deaktiviert, bitte einloggen</p>
  <% } else if (chn.chan_chat == 3 && user && !same)  {%>
      <div id="sendbottom">
        <input class="inputMessage" type="text" id="msg"/>
        <input type="button" id="send" value="send" class="inlineButton">
        <p id="sendStatus"></p>
      </div>
  <% } else if (chn.chan_chat == 4 )  {%>
    <div class="chatcontainer">
      <p>Chat:</p>
      <ul id="chatlist" class="chat">
  
      </ul>
      <div id="sendbottom">
        <input class="inputMessage" type="text" id="msg"/>
        <input type="button" id="send" value="send" class="inlineButton">
        <p id="sendStatus"></p>
      </div>
    </div>
  <% } else if (chn.chan_chat == 5 && !user)  {%>
    <p>chat deaktiviert, bitte einloggen</p>
  <% } else if (chn.chan_chat == 5 && user)  {%>
    <div class="chatcontainer">
      <p>Chat:</p>
      <ul id="chatlist" class="chat">
        
      </ul>
      <div id="sendbottom">
        <input class="inputMessage" type="text" id="msg"/>
        <input type="button" id="send" value="send" class="inlineButton">
        <p id="sendStatus"></p>
      </div>
    </div>
  <% }%>

  
  <button onclick="socket2.emit('feedback', '1')">GOOD</button>
  <button onclick="socket2.emit('feedback', '-1')">BAD</button>

  <script>
      //socketIO
       var socket2 = io("/chat");
      socket2.emit('join', "<%=name%>");

      //socket.emit('join', "<%=name%>");
      socket2.on("chat message", (data) =>{  
        console.dir(data)

        var userSPAN = document.createElement("SPAN");
        userSPAN.setAttribute('class', 'username');
        var userTEXT = document.createTextNode(data.name);
        userSPAN.appendChild(userTEXT);


        var msgSPAN = document.createElement("SPAN");
        msgSPAN.setAttribute('class', 'message');
        var msgTEXT = document.createTextNode(data.msg);
        msgSPAN.appendChild(msgTEXT);

        var node = document.createElement("LI");
        node.setAttribute('class', 'messageContainer');

        node.appendChild(userSPAN);
        node.appendChild(msgSPAN);

        var ul = document.getElementById("chatlist");
        ul.appendChild(node);

      })

      socket2.on("status", async (data) =>{  

        console.dir(data)

        if(data.success){

          document.getElementById("sendStatus").innerHTML = data.asw;
          document.getElementById('msg').value = '';
        } else {
          
          document.getElementById("sendStatus").innerHTML = data.asw;
        }

        await sleep(3000)
        document.getElementById("sendStatus").innerHTML = '';
      })
  
      socket2.on("feedback", (data)=>{
        console.log(data)
      })
      var btn = document.getElementById("send");
  
      btn.addEventListener('click', e => {
        e.preventDefault()
  
        var msg2send = document.getElementById('msg').value;
        
        console.log("sending: " + msg2send)
        socket2.emit('chat message', msg2send);
      })
      
      function sleep(milliseconds) {
        return new Promise(resolve => setTimeout(resolve, milliseconds));
      }

    </script>

</div>


<% }%>

<footer>
    <%- include('./footer'); %>
</footer>

</body>
</html>

